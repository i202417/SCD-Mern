[{"/home/ammar/Documents/GitHub/Bazar.pk/frontend/src/index.js":"1","/home/ammar/Documents/GitHub/Bazar.pk/frontend/src/App.js":"2","/home/ammar/Documents/GitHub/Bazar.pk/frontend/src/reportWebVitals.js":"3","/home/ammar/Documents/GitHub/Bazar.pk/frontend/src/screens/HomeScreen.js":"4","/home/ammar/Documents/GitHub/Bazar.pk/frontend/src/screens/ProductScreen.js":"5","/home/ammar/Documents/GitHub/Bazar.pk/frontend/src/components/Product.js":"6","/home/ammar/Documents/GitHub/Bazar.pk/frontend/src/components/Rating.js":"7","/home/ammar/Documents/GitHub/Bazar.pk/frontend/src/components/LoadingBox.js":"8","/home/ammar/Documents/GitHub/Bazar.pk/frontend/src/components/MessageBox.js":"9","/home/ammar/Documents/GitHub/Bazar.pk/frontend/src/utils.js":"10","/home/ammar/Documents/GitHub/Bazar.pk/frontend/src/Store.js":"11","/home/ammar/Documents/GitHub/Bazar.pk/frontend/src/screens/CartScreen.js":"12","/home/ammar/Documents/GitHub/Bazar.pk/frontend/src/screens/SigninScreen.js":"13","/home/ammar/Documents/GitHub/Bazar.pk/frontend/src/screens/ShippingAddressScreen.js":"14","/home/ammar/Documents/GitHub/Bazar.pk/frontend/src/components/CheckoutSteps.js":"15","/home/ammar/Documents/GitHub/Bazar.pk/frontend/src/screens/SignupScreen.js":"16","/home/ammar/Documents/GitHub/Bazar.pk/frontend/src/screens/PaymentMethodScreen.js":"17","/home/ammar/Documents/GitHub/Bazar.pk/frontend/src/screens/PlaceOrderScreen.js":"18","/home/ammar/Documents/GitHub/Bazar.pk/frontend/src/screens/OrderScreen.js":"19","/home/ammar/Documents/GitHub/Bazar.pk/frontend/src/screens/OrderHistoryScreen.js":"20","/home/ammar/Documents/GitHub/Bazar.pk/frontend/src/screens/ProfileScreen.js":"21"},{"size":878,"mtime":1669139134828,"results":"22","hashOfConfig":"23"},{"size":4809,"mtime":1669141580405,"results":"24","hashOfConfig":"23"},{"size":362,"mtime":1668947279146,"results":"25","hashOfConfig":"23"},{"size":1963,"mtime":1669226532567,"results":"26","hashOfConfig":"23"},{"size":4450,"mtime":1669141779470,"results":"27","hashOfConfig":"23"},{"size":1606,"mtime":1669226423366,"results":"28","hashOfConfig":"23"},{"size":1660,"mtime":1669226998031,"results":"29","hashOfConfig":"23"},{"size":277,"mtime":1669227547031,"results":"30","hashOfConfig":"23"},{"size":200,"mtime":1669225018680,"results":"31","hashOfConfig":"23"},{"size":157,"mtime":1668957003058,"results":"32","hashOfConfig":"23"},{"size":2308,"mtime":1669052703679,"results":"33","hashOfConfig":"23"},{"size":4353,"mtime":1669141856302,"results":"34","hashOfConfig":"23"},{"size":2383,"mtime":1668965264010,"results":"35","hashOfConfig":"23"},{"size":3379,"mtime":1668971179972,"results":"36","hashOfConfig":"23"},{"size":610,"mtime":1669227275553,"results":"37","hashOfConfig":"23"},{"size":3105,"mtime":1669141790242,"results":"38","hashOfConfig":"23"},{"size":2079,"mtime":1669052483474,"results":"39","hashOfConfig":"23"},{"size":6401,"mtime":1669141754265,"results":"40","hashOfConfig":"23"},{"size":8445,"mtime":1669141715533,"results":"41","hashOfConfig":"23"},{"size":2976,"mtime":1669140220914,"results":"42","hashOfConfig":"23"},{"size":3152,"mtime":1669141601177,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},"11z03su",{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109"},"/home/ammar/Documents/GitHub/Bazar.pk/frontend/src/index.js",[],[],[],"/home/ammar/Documents/GitHub/Bazar.pk/frontend/src/App.js",[],[],"/home/ammar/Documents/GitHub/Bazar.pk/frontend/src/reportWebVitals.js",[],[],"/home/ammar/Documents/GitHub/Bazar.pk/frontend/src/screens/HomeScreen.js",[],[],"/home/ammar/Documents/GitHub/Bazar.pk/frontend/src/screens/ProductScreen.js",[],[],"/home/ammar/Documents/GitHub/Bazar.pk/frontend/src/components/Product.js",[],[],"/home/ammar/Documents/GitHub/Bazar.pk/frontend/src/components/Rating.js",[],[],"/home/ammar/Documents/GitHub/Bazar.pk/frontend/src/components/LoadingBox.js",[],[],"/home/ammar/Documents/GitHub/Bazar.pk/frontend/src/components/MessageBox.js",[],[],"/home/ammar/Documents/GitHub/Bazar.pk/frontend/src/utils.js",[],[],"/home/ammar/Documents/GitHub/Bazar.pk/frontend/src/Store.js",[],[],"/home/ammar/Documents/GitHub/Bazar.pk/frontend/src/screens/CartScreen.js",[],[],"/home/ammar/Documents/GitHub/Bazar.pk/frontend/src/screens/SigninScreen.js",[],[],"/home/ammar/Documents/GitHub/Bazar.pk/frontend/src/screens/ShippingAddressScreen.js",[],[],"/home/ammar/Documents/GitHub/Bazar.pk/frontend/src/components/CheckoutSteps.js",[],[],"/home/ammar/Documents/GitHub/Bazar.pk/frontend/src/screens/SignupScreen.js",[],[],"/home/ammar/Documents/GitHub/Bazar.pk/frontend/src/screens/PaymentMethodScreen.js",[],[],"/home/ammar/Documents/GitHub/Bazar.pk/frontend/src/screens/PlaceOrderScreen.js",[],[],"/home/ammar/Documents/GitHub/Bazar.pk/frontend/src/screens/OrderScreen.js",["110"],[],"import axios from 'axios';\nimport React, { useContext, useEffect, useReducer } from 'react';\nimport { PayPalButtons, usePayPalScriptReducer } from '@paypal/react-paypal-js';\nimport { Helmet } from 'react-helmet-async';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Card from 'react-bootstrap/Card';\nimport { Link } from 'react-router-dom';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { Store } from '../Store';\nimport { getError } from '../utils';\nimport { toast } from 'react-toastify';\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'FETCH_REQUEST':\n      return { ...state, loading: true, error: '' };\n    case 'FETCH_SUCCESS':\n      return { ...state, loading: false, order: action.payload, error: '' };\n    case 'FETCH_FAIL':\n      return { ...state, loading: false, error: action.payload };\n    case 'PAY_REQUEST':\n      return { ...state, loadingPay: true };\n    case 'PAY_SUCCESS':\n      return { ...state, loadingPay: false, successPay: true };\n    case 'PAY_FAIL':\n      return { ...state, loadingPay: false };\n    case 'PAY_RESET':\n      return { ...state, loadingPay: false, successPay: false };\n\n    default:\n      return state;\n  }\n}\nexport default function OrderScreen() {\n  const { state } = useContext(Store);\n  const { userInfo } = state;\n  const params = useParams();\n  const { id: orderId } = params;\n  const navigate = useNavigate();\n  const [{ loading, error, order, successPay, loadingPay }, dispatch] =\n    useReducer(reducer, {\n      loading: true,\n      order: {},\n      error: '',\n      successPay: false,\n      loadingPay: false,\n    });\n\n  const [{ isPending }, paypalDispatch] = usePayPalScriptReducer();\n\n  function createOrder(data, actions) {\n    return actions.order\n      .create({\n        purchase_units: [\n          {\n            amount: { value: order.totalPrice },\n          },\n        ],\n      })\n      .then((orderID) => {\n        return orderID;\n      });\n  }\n\n  function onApprove(data, actions) {\n    return actions.order.capture().then(async function (details) {\n      try {\n        dispatch({ type: 'PAY_REQUEST' });\n        const { data } = await axios.put(\n          `/api/orders/${order._id}/pay`,\n          details,\n          {\n            headers: { authorization: `Bearer ${userInfo.token}` },\n          }\n        );\n        dispatch({ type: 'PAY_SUCCESS', payload: data });\n        toast.success('Order is paid');\n      } catch (err) {\n        dispatch({ type: 'PAY_FAIL', payload: getError(err) });\n        toast.error(getError(err));\n      }\n    });\n  }\n  function onError(err) {\n    toast.error(getError(err));\n  }\n\n  useEffect(() => {\n    const fetchOrder = async () => {\n      try {\n        dispatch({ type: 'FETCH_REQUEST' });\n        const { data } = await axios.get(`/api/orders/${orderId}`, {\n          headers: { authorization: `Bearer ${userInfo.token}` },\n        });\n        dispatch({ type: 'FETCH_SUCCESS', payload: data });\n      } catch (err) {\n        dispatch({ type: 'FETCH_FAIL', payload: getError(err) });\n      }\n    };\n    if (!userInfo) {\n      return navigate('/login');\n    }\n    if (!order._id || successPay || (order._id && order._id !== orderId)) {\n      fetchOrder();\n      if (successPay) {\n        dispatch({ type: 'PAY_RESET' });\n      }\n    } else {\n      const loadPaypalScript = async () => {\n        const { data: clientId } = await axios.get('/api/keys/paypal', {\n          headers: { authorization: `Bearer ${userInfo.token}` },\n        });\n        paypalDispatch({\n          type: 'resetOptions',\n          value: {\n            'client-id': clientId,\n            currency: 'USD',\n          },\n        });\n        paypalDispatch({ type: 'setLoadingStatus', value: 'pending' });\n      };\n      loadPaypalScript();\n    }\n  }, [order, userInfo, orderId, navigate]);\n  return loading ? (\n    <LoadingBox></LoadingBox>\n  ) : error ? (\n    <MessageBox variant=\"danger\">{error}</MessageBox>\n  ) : (\n    <div>\n      <Helmet>\n        <title>Order {orderId}</title>\n      </Helmet>\n      <h1 className=\"my-3\">Order {orderId}</h1>\n      <Row>\n        <Col md={8}>\n          <Card className=\"mb-3\">\n            <Card.Body>\n              <Card.Title>Shipping</Card.Title>\n              <Card.Text>\n                <strong>Name:</strong> {order.shippingAddress.fullName} <br />\n                <strong>Address: </strong> {order.shippingAddress.address},\n                {order.shippingAddress.city}, {order.shippingAddress.postalCode}\n                ,{order.shippingAddress.country}\n              </Card.Text>\n              {order.isDelivered ? (\n                <MessageBox variant=\"success\">\n                  Delivered at {order.deliveredAt}\n                </MessageBox>\n              ) : (\n                <MessageBox variant=\"danger\">Not Delivered</MessageBox>\n              )}\n            </Card.Body>\n          </Card>\n          <Card className=\"mb-3\">\n            <Card.Body>\n              <Card.Title>Payment</Card.Title>\n              <Card.Text>\n                <strong>Method:</strong> {order.paymentMethod}\n              </Card.Text>\n              {order.isPaid ? (\n                <MessageBox variant=\"success\">\n                  Paid at {order.paidAt}\n                </MessageBox>\n              ) : (\n                <MessageBox variant=\"danger\">Not Paid</MessageBox>\n              )}\n            </Card.Body>\n          </Card>\n          <Card className=\"mb-3\">\n            <Card.Body>\n              <Card.Title>Items</Card.Title>\n              <ListGroup variant=\"flush\">\n                {order.orderItems.map((item) => (\n                  <ListGroup.Item key={item._id}>\n                    <Row className=\"align-items-center\">\n                      <Col md={6}>\n                        <img\n                          src={item.image}\n                          alt={item.name}\n                          className=\"img-fluid rounded img-thumbnail\"\n                        ></img>{' '}\n                        <Link to={`/product/${item.slug}`}>{item.name}</Link>\n                      </Col>\n                      <Col md={3}>\n                        <span>{item.quantity}</span>\n                      </Col>\n                      <Col md={3}>RS {item.price}</Col>\n                    </Row>\n                  </ListGroup.Item>\n                ))}\n              </ListGroup>\n            </Card.Body>\n          </Card>\n        </Col>\n        <Col md={4}>\n          <Card className=\"mb-3\">\n            <Card.Body>\n              <Card.Title>Order Summary</Card.Title>\n              <ListGroup variant=\"flush\">\n                <ListGroup.Item>\n                  <Row>\n                    <Col>Items</Col>\n                    <Col>RS {order.itemsPrice.toFixed(2)}</Col>\n                  </Row>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <Row>\n                    <Col>Shipping</Col>\n                    <Col>RS {order.shippingPrice.toFixed(2)}</Col>\n                  </Row>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <Row>\n                    <Col>Tax</Col>\n                    <Col>RS{order.taxPrice.toFixed(2)}</Col>\n                  </Row>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <Row>\n                    <Col>\n                      <strong> Order Total</strong>\n                    </Col>\n                    <Col>\n                      <strong>RS {order.totalPrice.toFixed(2)}</strong>\n                    </Col>\n                  </Row>\n                </ListGroup.Item>\n                {!order.isPaid && (\n                  <ListGroup.Item>\n                    {isPending ? (\n                      <LoadingBox />\n                    ) : (\n                      <div>\n                        <PayPalButtons\n                          createOrder={createOrder}\n                          onApprove={onApprove}\n                          onError={onError}\n                        ></PayPalButtons>\n                      </div>\n                    )}\n                    {loadingPay && <LoadingBox></LoadingBox>}\n                  </ListGroup.Item>\n                )}\n              </ListGroup>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n    </div>\n  );\n}","/home/ammar/Documents/GitHub/Bazar.pk/frontend/src/screens/OrderHistoryScreen.js",[],[],"/home/ammar/Documents/GitHub/Bazar.pk/frontend/src/screens/ProfileScreen.js",["111","112"],[],"import React, { useContext, useReducer, useState } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { Store } from '../Store';\nimport { toast } from 'react-toastify';\nimport { getError } from '../utils';\nimport axios from 'axios';\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'UPDATE_REQUEST':\n      return { ...state, loadingUpdate: true };\n    case 'UPDATE_SUCCESS':\n      return { ...state, loadingUpdate: false };\n    case 'UPDATE_FAIL':\n      return { ...state, loadingUpdate: false };\n\n    default:\n      return state;\n  }\n};\n\nexport default function ProfileScreen() {\n  const { state, dispatch: ctxDispatch } = useContext(Store);\n  const { userInfo } = state;\n  const [name, setName] = useState(userInfo.name);\n  const [email, setEmail] = useState(userInfo.email);\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n\n  const [{ loadingUpdate }, dispatch] = useReducer(reducer, {\n    loadingUpdate: false,\n  });\n\n  const submitHandler = async (e) => {\n    e.preventDefault();\n    try {\n      const { data } = await axios.put(\n        '/api/users/profile',\n        {\n          name,\n          email,\n          password,\n        },\n        {\n          headers: { Authorization: `Bearer ${userInfo.token}` },\n        }\n      );\n      dispatch({\n        type: 'UPDATE_SUCCESS',\n      });\n      ctxDispatch({ type: 'USER_SIGNIN', payload: data });\n      localStorage.setItem('userInfo', JSON.stringify(data));\n      toast.success('User updated successfully');\n    } catch (err) {\n      dispatch({\n        type: 'FETCH_FAIL',\n      });\n      toast.error(getError(err));\n    }\n  };\n\n  return (\n    <div className=\"container small-container\">\n      <Helmet>\n        <title>User Profile</title>\n      </Helmet>\n      <h1 className=\"my-3\">User Profile</h1>\n      <form onSubmit={submitHandler}>\n        <Form.Group className=\"mb-3\" controlId=\"name\">\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            required\n          />\n        </Form.Group>\n        <Form.Group className=\"mb-3\" controlId=\"name\">\n          <Form.Label>Email</Form.Label>\n          <Form.Control\n            type=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            required\n          />\n        </Form.Group>\n        <Form.Group className=\"mb-3\" controlId=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </Form.Group>\n        <Form.Group className=\"mb-3\" controlId=\"password\">\n          <Form.Label>Confirm Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            onChange={(e) => setConfirmPassword(e.target.value)}\n          />\n        </Form.Group>\n        <div className=\"mb-3\">\n          <Button type=\"submit\">Update</Button>\n        </div>\n      </form>\n    </div>\n  );\n}",{"ruleId":"113","severity":1,"message":"114","line":128,"column":6,"nodeType":"115","endLine":128,"endColumn":42,"suggestions":"116"},{"ruleId":"117","severity":1,"message":"118","line":30,"column":10,"nodeType":"119","messageId":"120","endLine":30,"endColumn":25},{"ruleId":"117","severity":1,"message":"121","line":32,"column":12,"nodeType":"119","messageId":"120","endLine":32,"endColumn":25},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'paypalDispatch' and 'successPay'. Either include them or remove the dependency array.","ArrayExpression",["122"],"no-unused-vars","'confirmPassword' is assigned a value but never used.","Identifier","unusedVar","'loadingUpdate' is assigned a value but never used.",{"desc":"123","fix":"124"},"Update the dependencies array to be: [order, userInfo, orderId, navigate, successPay, paypalDispatch]",{"range":"125","text":"126"},[3953,3989],"[order, userInfo, orderId, navigate, successPay, paypalDispatch]"]