[{"/home/ammar/Documents/GitHub/Bazar.pk/frontend/src/index.js":"1","/home/ammar/Documents/GitHub/Bazar.pk/frontend/src/App.js":"2","/home/ammar/Documents/GitHub/Bazar.pk/frontend/src/reportWebVitals.js":"3","/home/ammar/Documents/GitHub/Bazar.pk/frontend/src/screens/HomeScreen.js":"4","/home/ammar/Documents/GitHub/Bazar.pk/frontend/src/screens/ProductScreen.js":"5","/home/ammar/Documents/GitHub/Bazar.pk/frontend/src/components/Product.js":"6","/home/ammar/Documents/GitHub/Bazar.pk/frontend/src/components/Rating.js":"7","/home/ammar/Documents/GitHub/Bazar.pk/frontend/src/components/LoadingBox.js":"8","/home/ammar/Documents/GitHub/Bazar.pk/frontend/src/components/MessageBox.js":"9","/home/ammar/Documents/GitHub/Bazar.pk/frontend/src/utils.js":"10","/home/ammar/Documents/GitHub/Bazar.pk/frontend/src/Store.js":"11","/home/ammar/Documents/GitHub/Bazar.pk/frontend/src/screens/CartScreen.js":"12","/home/ammar/Documents/GitHub/Bazar.pk/frontend/src/screens/SigninScreen.js":"13","/home/ammar/Documents/GitHub/Bazar.pk/frontend/src/screens/ShippingAddressScreen.js":"14","/home/ammar/Documents/GitHub/Bazar.pk/frontend/src/components/CheckoutSteps.js":"15","/home/ammar/Documents/GitHub/Bazar.pk/frontend/src/screens/SignupScreen.js":"16","/home/ammar/Documents/GitHub/Bazar.pk/frontend/src/screens/PaymentMethodScreen.js":"17","/home/ammar/Documents/GitHub/Bazar.pk/frontend/src/screens/PlaceOrderScreen.js":"18","/home/ammar/Documents/GitHub/Bazar.pk/frontend/src/screens/OrderScreen.js":"19","/home/ammar/Documents/GitHub/Bazar.pk/frontend/src/screens/OrderHistoryScreen.js":"20"},{"size":878,"mtime":1669139134828,"results":"21","hashOfConfig":"22"},{"size":4615,"mtime":1669140596144,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":1668947279146,"results":"24","hashOfConfig":"22"},{"size":1986,"mtime":1669058384863,"results":"25","hashOfConfig":"22"},{"size":4446,"mtime":1668959027719,"results":"26","hashOfConfig":"22"},{"size":1588,"mtime":1668959995483,"results":"27","hashOfConfig":"22"},{"size":1492,"mtime":1668949787527,"results":"28","hashOfConfig":"22"},{"size":224,"mtime":1668957007839,"results":"29","hashOfConfig":"22"},{"size":165,"mtime":1668957010163,"results":"30","hashOfConfig":"22"},{"size":157,"mtime":1668957003058,"results":"31","hashOfConfig":"22"},{"size":2308,"mtime":1669052703679,"results":"32","hashOfConfig":"22"},{"size":4353,"mtime":1669053222994,"results":"33","hashOfConfig":"22"},{"size":2383,"mtime":1668965264010,"results":"34","hashOfConfig":"22"},{"size":3379,"mtime":1668971179972,"results":"35","hashOfConfig":"22"},{"size":483,"mtime":1668971212513,"results":"36","hashOfConfig":"22"},{"size":3105,"mtime":1669052080518,"results":"37","hashOfConfig":"22"},{"size":2079,"mtime":1669052483474,"results":"38","hashOfConfig":"22"},{"size":6391,"mtime":1669054414340,"results":"39","hashOfConfig":"22"},{"size":8436,"mtime":1669138934251,"results":"40","hashOfConfig":"22"},{"size":2976,"mtime":1669140220914,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},"11z03su",{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"45"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/ammar/Documents/GitHub/Bazar.pk/frontend/src/index.js",[],[],[],"/home/ammar/Documents/GitHub/Bazar.pk/frontend/src/App.js",[],[],"/home/ammar/Documents/GitHub/Bazar.pk/frontend/src/reportWebVitals.js",[],[],"/home/ammar/Documents/GitHub/Bazar.pk/frontend/src/screens/HomeScreen.js",[],[],"/home/ammar/Documents/GitHub/Bazar.pk/frontend/src/screens/ProductScreen.js",[],[],"/home/ammar/Documents/GitHub/Bazar.pk/frontend/src/components/Product.js",[],[],"/home/ammar/Documents/GitHub/Bazar.pk/frontend/src/components/Rating.js",[],[],"/home/ammar/Documents/GitHub/Bazar.pk/frontend/src/components/LoadingBox.js",[],[],"/home/ammar/Documents/GitHub/Bazar.pk/frontend/src/components/MessageBox.js",[],[],"/home/ammar/Documents/GitHub/Bazar.pk/frontend/src/utils.js",[],[],"/home/ammar/Documents/GitHub/Bazar.pk/frontend/src/Store.js",[],[],"/home/ammar/Documents/GitHub/Bazar.pk/frontend/src/screens/CartScreen.js",[],[],"/home/ammar/Documents/GitHub/Bazar.pk/frontend/src/screens/SigninScreen.js",[],[],"/home/ammar/Documents/GitHub/Bazar.pk/frontend/src/screens/ShippingAddressScreen.js",[],[],"/home/ammar/Documents/GitHub/Bazar.pk/frontend/src/components/CheckoutSteps.js",[],[],"/home/ammar/Documents/GitHub/Bazar.pk/frontend/src/screens/SignupScreen.js",[],[],"/home/ammar/Documents/GitHub/Bazar.pk/frontend/src/screens/PaymentMethodScreen.js",[],[],"/home/ammar/Documents/GitHub/Bazar.pk/frontend/src/screens/PlaceOrderScreen.js",[],[],"/home/ammar/Documents/GitHub/Bazar.pk/frontend/src/screens/OrderScreen.js",["104"],[],"import axios from 'axios';\nimport React, { useContext, useEffect, useReducer } from 'react';\nimport { PayPalButtons, usePayPalScriptReducer } from '@paypal/react-paypal-js';\nimport { Helmet } from 'react-helmet-async';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Card from 'react-bootstrap/Card';\nimport { Link } from 'react-router-dom';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { Store } from '../Store';\nimport { getError } from '../utils';\nimport { toast } from 'react-toastify';\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'FETCH_REQUEST':\n      return { ...state, loading: true, error: '' };\n    case 'FETCH_SUCCESS':\n      return { ...state, loading: false, order: action.payload, error: '' };\n    case 'FETCH_FAIL':\n      return { ...state, loading: false, error: action.payload };\n    case 'PAY_REQUEST':\n      return { ...state, loadingPay: true };\n    case 'PAY_SUCCESS':\n      return { ...state, loadingPay: false, successPay: true };\n    case 'PAY_FAIL':\n      return { ...state, loadingPay: false };\n    case 'PAY_RESET':\n      return { ...state, loadingPay: false, successPay: false };\n\n    default:\n      return state;\n  }\n}\nexport default function OrderScreen() {\n  const { state } = useContext(Store);\n  const { userInfo } = state;\n  const params = useParams();\n  const { id: orderId } = params;\n  const navigate = useNavigate();\n  const [{ loading, error, order, successPay, loadingPay }, dispatch] =\n    useReducer(reducer, {\n      loading: true,\n      order: {},\n      error: '',\n      successPay: false,\n      loadingPay: false,\n    });\n\n  const [{ isPending }, paypalDispatch] = usePayPalScriptReducer();\n\n  function createOrder(data, actions) {\n    return actions.order\n      .create({\n        purchase_units: [\n          {\n            amount: { value: order.totalPrice },\n          },\n        ],\n      })\n      .then((orderID) => {\n        return orderID;\n      });\n  }\n\n  function onApprove(data, actions) {\n    return actions.order.capture().then(async function (details) {\n      try {\n        dispatch({ type: 'PAY_REQUEST' });\n        const { data } = await axios.put(\n          `/api/orders/${order._id}/pay`,\n          details,\n          {\n            headers: { authorization: `Bearer ${userInfo.token}` },\n          }\n        );\n        dispatch({ type: 'PAY_SUCCESS', payload: data });\n        toast.success('Order is paid');\n      } catch (err) {\n        dispatch({ type: 'PAY_FAIL', payload: getError(err) });\n        toast.error(getError(err));\n      }\n    });\n  }\n  function onError(err) {\n    toast.error(getError(err));\n  }\n\n  useEffect(() => {\n    const fetchOrder = async () => {\n      try {\n        dispatch({ type: 'FETCH_REQUEST' });\n        const { data } = await axios.get(`/api/orders/${orderId}`, {\n          headers: { authorization: `Bearer ${userInfo.token}` },\n        });\n        dispatch({ type: 'FETCH_SUCCESS', payload: data });\n      } catch (err) {\n        dispatch({ type: 'FETCH_FAIL', payload: getError(err) });\n      }\n    };\n    if (!userInfo) {\n      return navigate('/login');\n    }\n    if (!order._id || successPay || (order._id && order._id !== orderId)) {\n      fetchOrder();\n      if (successPay) {\n        dispatch({ type: 'PAY_RESET' });\n      }\n    } else {\n      const loadPaypalScript = async () => {\n        const { data: clientId } = await axios.get('/api/keys/paypal', {\n          headers: { authorization: `Bearer ${userInfo.token}` },\n        });\n        paypalDispatch({\n          type: 'resetOptions',\n          value: {\n            'client-id': clientId,\n            currency: 'USD',\n          },\n        });\n        paypalDispatch({ type: 'setLoadingStatus', value: 'pending' });\n      };\n      loadPaypalScript();\n    }\n  }, [order, userInfo, orderId, navigate]);\n  return loading ? (\n    <LoadingBox></LoadingBox>\n  ) : error ? (\n    <MessageBox variant=\"danger\">{error}</MessageBox>\n  ) : (\n    <div>\n      <Helmet>\n        <title>Order {orderId}</title>\n      </Helmet>\n      <h1 className=\"my-3\">Order {orderId}</h1>\n      <Row>\n        <Col md={8}>\n          <Card className=\"mb-3\">\n            <Card.Body>\n              <Card.Title>Shipping</Card.Title>\n              <Card.Text>\n                <strong>Name:</strong> {order.shippingAddress.fullName} <br />\n                <strong>Address: </strong> {order.shippingAddress.address},\n                {order.shippingAddress.city}, {order.shippingAddress.postalCode}\n                ,{order.shippingAddress.country}\n              </Card.Text>\n              {order.isDelivered ? (\n                <MessageBox variant=\"success\">\n                  Delivered at {order.deliveredAt}\n                </MessageBox>\n              ) : (\n                <MessageBox variant=\"danger\">Not Delivered</MessageBox>\n              )}\n            </Card.Body>\n          </Card>\n          <Card className=\"mb-3\">\n            <Card.Body>\n              <Card.Title>Payment</Card.Title>\n              <Card.Text>\n                <strong>Method:</strong> {order.paymentMethod}\n              </Card.Text>\n              {order.isPaid ? (\n                <MessageBox variant=\"success\">\n                  Paid at {order.paidAt}\n                </MessageBox>\n              ) : (\n                <MessageBox variant=\"danger\">Not Paid</MessageBox>\n              )}\n            </Card.Body>\n          </Card>\n          <Card className=\"mb-3\">\n            <Card.Body>\n              <Card.Title>Items</Card.Title>\n              <ListGroup variant=\"flush\">\n                {order.orderItems.map((item) => (\n                  <ListGroup.Item key={item._id}>\n                    <Row className=\"align-items-center\">\n                      <Col md={6}>\n                        <img\n                          src={item.image}\n                          alt={item.name}\n                          className=\"img-fluid rounded img-thumbnail\"\n                        ></img>{' '}\n                        <Link to={`/product/${item.slug}`}>{item.name}</Link>\n                      </Col>\n                      <Col md={3}>\n                        <span>{item.quantity}</span>\n                      </Col>\n                      <Col md={3}>${item.price}</Col>\n                    </Row>\n                  </ListGroup.Item>\n                ))}\n              </ListGroup>\n            </Card.Body>\n          </Card>\n        </Col>\n        <Col md={4}>\n          <Card className=\"mb-3\">\n            <Card.Body>\n              <Card.Title>Order Summary</Card.Title>\n              <ListGroup variant=\"flush\">\n                <ListGroup.Item>\n                  <Row>\n                    <Col>Items</Col>\n                    <Col>${order.itemsPrice.toFixed(2)}</Col>\n                  </Row>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <Row>\n                    <Col>Shipping</Col>\n                    <Col>${order.shippingPrice.toFixed(2)}</Col>\n                  </Row>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <Row>\n                    <Col>Tax</Col>\n                    <Col>${order.taxPrice.toFixed(2)}</Col>\n                  </Row>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <Row>\n                    <Col>\n                      <strong> Order Total</strong>\n                    </Col>\n                    <Col>\n                      <strong>${order.totalPrice.toFixed(2)}</strong>\n                    </Col>\n                  </Row>\n                </ListGroup.Item>\n                {!order.isPaid && (\n                  <ListGroup.Item>\n                    {isPending ? (\n                      <LoadingBox />\n                    ) : (\n                      <div>\n                        <PayPalButtons\n                          createOrder={createOrder}\n                          onApprove={onApprove}\n                          onError={onError}\n                        ></PayPalButtons>\n                      </div>\n                    )}\n                    {loadingPay && <LoadingBox></LoadingBox>}\n                  </ListGroup.Item>\n                )}\n              </ListGroup>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n    </div>\n  );\n}","/home/ammar/Documents/GitHub/Bazar.pk/frontend/src/screens/OrderHistoryScreen.js",[],[],{"ruleId":"105","severity":1,"message":"106","line":128,"column":6,"nodeType":"107","endLine":128,"endColumn":42,"suggestions":"108"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'paypalDispatch' and 'successPay'. Either include them or remove the dependency array.","ArrayExpression",["109"],{"desc":"110","fix":"111"},"Update the dependencies array to be: [order, userInfo, orderId, navigate, successPay, paypalDispatch]",{"range":"112","text":"113"},[3953,3989],"[order, userInfo, orderId, navigate, successPay, paypalDispatch]"]